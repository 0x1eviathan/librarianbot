from api.database import db
from keyboards import search_books_markup, back_to_main_menu_markup

from main import user_router, bot

from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


class SearchBooks(StatesGroup):
    key_word = State()


@user_router.message(SearchBooks.key_word)
async def key_word_state(message: types.Message, state: FSMContext):
    key_word = message.text

    if key_word is None:
        raise Exception

    await message.delete()

    data = await state.get_data()

    message_id = data.get('message_id')

    chat_id = message.from_user.id

    searched_books = db.get_searched_books(book_owner=chat_id, key_word=key_word)

    if searched_books:
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=f'<b> üîé –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥ –ø–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –ø—Ä–µ–¥–æ—Å—Ç–∞–ª–µ–Ω —Å–Ω–∏–∑—É. :)</b>',
            reply_markup=search_books_markup(searched_books, key_word=key_word)
        )

        await state.clear()
    else:
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=f'<b> ‚ùó –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å! :)</b>',
            reply_markup=back_to_main_menu_markup()
        )


